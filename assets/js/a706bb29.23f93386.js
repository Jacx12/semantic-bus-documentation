"use strict";(self.webpackChunksemantic_bus_documentation=self.webpackChunksemantic_bus_documentation||[]).push([[5937],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||a;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,l={unversionedId:"bus-wiki/Composant:-data.gouv-reverse-geocoding",id:"bus-wiki/Composant:-data.gouv-reverse-geocoding",title:"Composant:-data.gouv-reverse-geocoding",description:"Interroge l'API adresse.data.gouv.fr pour trouver une adresse \xe0 partir d'une latitude et d'une longitude contenue dans chaque donn\xe9e.",source:"@site/docs/bus-wiki/Composant:-data.gouv-reverse-geocoding.md",sourceDirName:"bus-wiki",slug:"/bus-wiki/Composant:-data.gouv-reverse-geocoding",permalink:"/semantic-bus-documentation/docs/bus-wiki/Composant:-data.gouv-reverse-geocoding",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Composant:-data.gouv-geocoding",permalink:"/semantic-bus-documentation/docs/bus-wiki/Composant:-data.gouv-geocoding"},next:{title:"Composant:-key-to-array",permalink:"/semantic-bus-documentation/docs/bus-wiki/Composant:-key-to-array"}},s={},u=[{value:"Exemple",id:"exemple",level:3},{value:"Mise en garde \u26a0\ufe0f",id:"mise-en-garde-\ufe0f",level:3},{value:"Param\xe8tres",id:"param\xe8tres",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Interroge l'API ",(0,o.kt)("strong",{parentName:"p"},"adresse.data.gouv.fr")," pour trouver une adresse \xe0 partir d'une latitude et d'une longitude contenue dans chaque donn\xe9e."),(0,o.kt)("h3",{id:"exemple"},"Exemple"),(0,o.kt)("p",null,"Par exemple avec une donn\xe9e ",(0,o.kt)("inlineCode",{parentName:"p"},'{ lat : "44.7873024", long : "-0.5603328" }'),' on entrera "lat" dans Latitude, "long" dans le param\xe8tre Longitude et par exemple postalCode dans Code Postal, inseeCode dans Code INSEE et city dans Ville.\nCe qui nous donnera au final une donn\xe9e qui ressemble \xe0 \xe7a : ',(0,o.kt)("inlineCode",{parentName:"p"},'{ lat : "44.7873024", long : "-0.5603328, postalCode : 33130, inseeCode : 33039, ville : "B\xe8gles" }"')),(0,o.kt)("h3",{id:"mise-en-garde-\ufe0f"},"Mise en garde \u26a0\ufe0f"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cette API ne concerne que les donn\xe9es situ\xe9es en France.")),(0,o.kt)("h3",{id:"param\xe8tres"},"Param\xe8tres"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Code Postal, Code INSEE, Ville"),": Nom des champs qui recevront le code postal, le code INSEE, le nom de ville trouv\xe9 gr\xe2ce \xe0 la latitude et la longitude contenue dans les donn\xe9es."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Latitude, Longitude"),": Permet de s\xe9lectionner les champs correspondant \xe0 la latitude et \xe0 la longitude.")))}p.isMDXComponent=!0}}]);