"use strict";(self.webpackChunksemantic_bus_documentation=self.webpackChunksemantic_bus_documentation||[]).push([[3540],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4718:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,l={unversionedId:"utilisateur/bus-wiki/Composant:-Google-geocoding",id:"utilisateur/bus-wiki/Composant:-Google-geocoding",title:"Composant:-Google-geocoding",description:"Le composant Aggregate renvoit vers cette page",source:"@site/docs/utilisateur/bus-wiki/Composant:-Google-geocoding.md",sourceDirName:"utilisateur/bus-wiki",slug:"/utilisateur/bus-wiki/Composant:-Google-geocoding",permalink:"/semantic-bus-documentation/docs/utilisateur/bus-wiki/Composant:-Google-geocoding",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Composant:-Google-Sheets",permalink:"/semantic-bus-documentation/docs/utilisateur/bus-wiki/Composant:-Google-Sheets"},next:{title:"Composant:-HTTP-Provider",permalink:"/semantic-bus-documentation/docs/utilisateur/bus-wiki/Composant:-HTTP-Provider"}},s={},u=[{value:"Exemple",id:"exemple",level:3},{value:"Mise en garde \u26a0\ufe0f",id:"mise-en-garde-\ufe0f",level:3},{value:"Param\xe8tres",id:"param\xe8tres",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Le composant Aggregate renvoit vers cette page")),(0,o.kt)("p",null,"Interroge l'API ",(0,o.kt)("strong",{parentName:"p"},"Google Geocode")," pour trouver une latitude et une longitude \xe0 partir d'une adresse contenue dans chaque donn\xe9e."),(0,o.kt)("h3",{id:"exemple"},"Exemple"),(0,o.kt)("p",null,"Par exemple avec une donn\xe9e ",(0,o.kt)("inlineCode",{parentName:"p"},'{ street : "106 Rue Alexis Labro", postalCode : 33130, ville : "B\xe8gles", country : "France" }')," on entrera street dans Rue, postalCode dans Code Postal, city dans Ville et country dans Pays.\nSi on souhaite que la latitude et la longitude soit appel\xe9es lat et long, il suffit de le mettre dans les param\xe8tres Latitude et Longitude.\nCe qui nous donnera au final une donn\xe9e qui ressemble \xe0 \xe7a : ",(0,o.kt)("inlineCode",{parentName:"p"},'{ street : "106 Rue Alexis Labro", postalCode : 33130, ville : "B\xe8gles", country : "France", lat : "44.7873024", long : "-0.5603328 }"')),(0,o.kt)("h3",{id:"mise-en-garde-\ufe0f"},"Mise en garde \u26a0\ufe0f"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"L'API de Google est payante \xe0 l'utilisation.")),(0,o.kt)("h3",{id:"param\xe8tres"},"Param\xe8tres"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ApiKey"),": La cl\xe9 d'API Google \xe0 fournir pour que le Geocoding fonctionne."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Rue, Ville, Code Postal, Pays"),": Permet de s\xe9lectionner les champs correspondant au nom de la rue, \xe0 la ville, au code postal et au pays. C'est l'adresse contenue dans les donn\xe9es. Ce ne sont pas des param\xe8tres qui sont tous obligatoires \xe0 remplir afin d'obtenir un r\xe9sultat."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Latitude, Longitude"),": Nom des champs qui recevront la latitude et la longitude trouv\xe9e gr\xe2ce \xe0 l'adresse compos\xe9e du code postal, de la rue... contenue dans les donn\xe9es.")))}d.isMDXComponent=!0}}]);